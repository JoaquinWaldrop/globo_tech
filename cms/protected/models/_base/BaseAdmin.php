<?php

/**
 * This is the model base class for the table "admin".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Admin".
 *
 * Columns in table "admin" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 *
 */
abstract class BaseAdmin extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'admin';
    }

    public static function representingColumn() {
        return 'username';
    }

    public function rules() {
        return array(
            array('username, password', 'required'),
            array('username, password', 'length', 'max'=>255),
            array('id, username, password', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'username' => Yii::t('app', 'Usuario'),
                'password' => Yii::t('app', 'ContraseÃ±a'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('username', $this->username, true);
        $criteria->compare('password', $this->password, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }

    protected function beforeSave()
    {
    $result = parent::beforeSave();     
    if(!$result) return false;
 
    // encrypt myEncrypted Field value
    $this->password = Yii::app()->aes256->encrypt($this->password);
    //echo $this->pass.length();
    return $result;
    }
}